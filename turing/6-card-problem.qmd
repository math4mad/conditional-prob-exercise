---
title: "6-card-problem"
author: math4mad
code-fold: true
---

:::{.callout-note title="简介"}
 参考 :"hakank-bayes-code"

 有一个袋子,有三张牌, 第一张两面都是红色, 第二张两面都是绿色, 第三张一面红色,一面绿色
 从袋子随机抽出一张牌, 如果观察到是绿色的一面, 来自第三张牌的几率是多大
:::

## 1 . 概率路径图

## 1.1 路径图
```{mermaid}
%%| fig-width: 6.5
%%| label: fig-1
%%| fig-cap: box-cards-flowchart
flowchart LR
    box("Box")
    card1("card1:🟥,🟥")
    card2("card2:🟩,🟩")
    card3("card3:🟥,🟩")
    box==c1:1/3==>card1
    box==c2:1/3==>card2
    box==c3:1/3==>card3
    card1==c1g1:0==>obsc11("🟩")
    card1==c1r1:1==>obsc12("🟥")
    card2==c2g1:1==>obsc21("🟩")
    card2==c2r1:0==>obsc22("🟥")
    card3==c3g1:1/2==>obsc31("🟩")
    card3==c3r1:1/2==>obsc32("🟥")

```

## 1.2 根据路径图的概率计算
在 @fig-1 中  获取绿色一面的路径有两条:

1. `c2->c2g1`
2. `c3->c3g1`

```{julia}
 c2=c3=1//3
 c2g1=1
 c3g1=1//2
 p1=c2*c2g1;p2=c3*c3g1
 total= p1+p2
 "绿色牌面来自第二张牌的概率为"=>p1//total

```

## 2 turing worflow
```{julia}
using Turing
include("utils.jl")
```

### 2.1  define model
```{julia}

@model function card_problem()
    red = 1
    green = 2
    
    all_red = 1
    all_green = 2
    red_green = 3
    
    #  What card did we select?
    selected_card ~ Categorical(simplex([1/3,1/3,1/3]))
    card ~ 
        selected_card == all_red   ?  Dirac(red) :
        selected_card == all_green ?  Dirac(green) :
        # [red,green]
        selected_card == red_green ?  Categorical([1/2,1/2]) : Dirac(0)
    true ~ Dirac(card == green)

end
```

### 2.2 mcmc sampling
```{julia}
chns = sample(card_problem(), MH(), 100_000)
display(chns)
show_var_dist_pct(chns, :selected_card,["all_red","all_green","red_green"])
```

