## 1. question 
> 赌徒口袋中有一枚均匀的硬币, 还有一枚两面都是正面的硬币,他随机拿出一枚硬币
>
> - (a) 抛出来是正面, 是均匀硬币的概率
> - (b) 再抛一次,仍是正面, 是均匀硬币的概率
> - (c) 第三次抛,发现是反面,是均匀硬币的概率

## 2. (a) 的概率路径图
```{mermaid}
flowchart LR
    A(Coin)==fc:1/2==>B(faircoin)
    A(Coin)==nfc:1/2==>C(notfaircoin)
    B(faircoin)==fc1h:1/2==>D(head)
    B(faircoin)-.fc1t:1/2.->E(tail)
    C(notfaircoin)==nfc1h:1==>F(head)
    style D  fill: #FF0000, stroke: #333, stroke-width: 2px;
    style F  fill: #FF0000, stroke: #333, stroke-width: 2px;
    
```
第一次抛出正面的概率有两个路径,均匀硬币是第一条路径
```{julia}
fc=nfc=1//2
fc1h=fc1t=1//2
nfc1h=1;nfc1t=0
path1=fc*fc1h
path2=nfc*nfc1h
p1head=path1+path2

"第一次抛出正面条件下,为均匀硬币的概率"=>path1//p1head
```

## 3. (b) 的概率路径图
```{mermaid}
flowchart LR
    A(Coin)==fc:1/2==>B(faircoin)
    A(Coin)==nfc:1/2==>C(notfaircoin)
    B(faircoin)==fc1h:1/2==>D(head)
    B(faircoin)==fc1t:1/2==>E(tail)
    C(notfaircoin)==nfc1h:1==>F(head)
    
    D(head)==fc2h:1/2==>I(head)
    D(head)==fc2t:1/2==>J(tail)
    E(tail)==fc2h:1/2==>K(head)
    E(tail)==fc2t:1/2==>L(tail)
    F(head)==nfc2h:1==>M(head)

    style D  fill: #FF0000, stroke: #333, stroke-width: 2px;
    style F  fill: #FF0000, stroke: #333, stroke-width: 2px;
    style I  fill: #FF0000, stroke: #333, stroke-width: 2px;
    style M  fill: #FF0000, stroke: #333, stroke-width: 2px;
    
```
第一次抛是正面, 第二次仍是正面仍是两条路径,但是概率发生变化

```{julia}
    fc2h=fc2t=1//2
    nfc2h=1
    path3=fc*fc1h*fc2h
    path4=nfc*nfc1h*nfc2h
    p2head=path3+path4
    "第一次抛是正面, 第二次仍是正面的硬币是均匀硬币的概率"=>path3//p2head
```
## 4. (c) 的概率路径图
实际因为两面都是人头的硬币不可能出现反面, 一旦出现反面, 整个路径就不存在. 
这就是著名的黑天鹅理论. 对于硬币试验, 如果从开始连续抛硬币都是正面,不能因为没有观察
到反面的现象,就匆忙下结论:硬币两面都是正面, 这个结论是经不起试验验证的.

因为即使观察到连续100次正面,一旦观察到一次反面,整个对模型的结论就完全失去作用了. 

我们看到 100 次白天鹅,不能下结论:所有天鹅都是白色的, 因为只要观察到一只黑天鹅, 这个结论
就是错误的.

```{mermaid}
flowchart LR
    A(Coin)==fc:1/2==>B(faircoin)
    A(Coin)==nfc:1/2==>C(notfaircoin)
    B(faircoin)==fc1h:1/2==>D(head)
    B(faircoin)==fc1t:1/2==>E(tail)
    C(notfaircoin)==nfc1h:1==>F(head)
    
    D(head)==fc2h:1/2==>I(head)
    D(head)==fc2t:1/2==>J(tail)
    E(tail)==fc2h:1/2==>K(head)
    E(tail)==fc2t:1/2==>L(tail)
    F(head)==nfc2h:1==>M(head)
    I(head)==fc3h:1/2==>N(head)
    I(head)==fc3t:1/2==>O(tail)

    style D  fill: #FF0000, stroke: #333, stroke-width: 2px;
    style I  fill: #FF0000, stroke: #333, stroke-width: 2px;
    style O  fill: #FF0000, stroke: #333, stroke-width: 2px;
```
`head->head->tail` 的路径只有一条,所以如果第三次抛出反面,肯定这枚硬币是均匀的硬币







