{
  "hash": "63bcb99c759d75455155b1e7f206bec7",
  "result": {
    "markdown": "---\ntitle: \"4-bags\"\nauthor: math4mad\ncode-fold: true\n---\n\n:::{.callout-note title=\"简介\"}\n   参考: [`hakank-bayes-code:book_bags`](http://www.hakank.org/julia/turing/book_bags.jl)\n\n   有两个包, 分别为 Bag1:[🔴:7,🔵:3],Bag2:[🔴:3,🔵:7]\n   两者被选中的机会相同,从中挑出一个包,并抽出球,在有放回的条件下:\n   分别计算在抽出 1:5 个蓝色球时 来自两个包的概率\n:::\n\n\n## 1. 概率路径图\n\n```{mermaid}\n%%| fig-width: 6.5\n%%| label: fig-1\n%%| fig-cap: bags-flowchart\nflowchart LR\n\n     twoBags(\"👜\")==b1:1/2 ==>Bag1(\"🔴 🔴 🔴 🔴 🔴 🔴 \\n 🔵 🔵 🔵\")\n     twoBags(\"👜\")==b1:1/2==>Bag2(\"🔴 🔴 🔴\\n 🔵 🔵 🔵 🔵 🔵 🔵 🔵 \")\n\n      Bag1==b11:3/10==>Obs11(\"🔵\")\n      Bag1==b12:3/10^2==>Obs12(\"🔵 🔵\")\n      Bag1==b13:3/10^3==>Obs13(\"🔵 🔵 🔵 \")\n      Bag1==b14:3/10^4==>Obs14(\"🔵 🔵 🔵 🔵\")\n      Bag1==b15:3/10^5==>Obs15(\"🔵 🔵 🔵 🔵 🔵\")\n\n\n      Bag2==b21:7/10==>Obs21(\"🔵\")\n      Bag2==b22:7/10^2==>Obs22(\"🔵 🔵\")\n      Bag2==b23:7/10^3==>Obs23(\"🔵 🔵 🔵 \")\n      Bag2==b24:7/10^4==>Obs24(\"🔵 🔵 🔵 🔵\")\n      Bag2==b25:7/10^5==>Obs25(\"🔵 🔵 🔵 🔵 🔵\")\n\n```\n\n\n### 1.1 基于概率路径图的计算\n以取出两个蓝色球为例在 @fig-1 中有两条路径\n\n-  `b1->b12`\n-  `b2->b22`\n  \n取出两个蓝色球的概率为两条路径的概率和,每条路径的概率除以总概率就是来自某个包的概率\n取出其他求的概率计算类似\n\n### 1.2 computing\n定义基本概率\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\n\"选中包的概率\"\nselect_bag=1//2\n\nb1blue=3;b1red=7;b1total=b1blue+b1red\nb2blue=7;b2red=3;b2total=b2blue+b2red\n\n\"从 bag1中抽出n个蓝色球的概率\"\npick_n_bag1=[(b1blue/b1total)^i for i in 1:5]\n\n\"从 bag2中抽出n个蓝色球的概率\"\npick_n_bag2=[(b2blue/b2total)^i for i in 1:5]\n\n@info \"pick 1:5 🔵 from bag1\"=> pick_n_bag1\n@info \"pick 1:5 🔵 from bag2\"=> pick_n_bag2\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n[ Info: \"pick 1:5 🔵 from bag1\" => [0.3, 0.09, 0.027, 0.0081, 0.0024299999999999994]\n[ Info: \"pick 1:5 🔵 from bag2\" => [0.7, 0.48999999999999994, 0.3429999999999999, 0.24009999999999995, 0.16806999999999994]\n```\n:::\n:::\n\n\n计算概率\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nusing DataFrames,GLMakie\n name1=Vector{String}(undef, 5)\n b1arr=Vector{Real}(undef, 5)\n b2arr=Vector{Real}(undef, 5)\n for idx in 1:5\n     total=pick_n_bag1[idx]+pick_n_bag2[idx]\n     name1[idx]=\"取出$(idx)个🔵\"\n     b1arr[idx]=pick_n_bag1[idx]/total\n     b2arr[idx]=pick_n_bag2[idx]/total\n\n end\n DataFrame(c1=name1,bag1=b1arr,bag2=b2arr)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div><div style = \"float: left;\"><span>5×3 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">c1</th><th style = \"text-align: left;\">bag1</th><th style = \"text-align: left;\">bag2</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Real\" style = \"text-align: left;\">Real</th><th title = \"Real\" style = \"text-align: left;\">Real</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">取出1个🔵</td><td style = \"text-align: right;\">0.3</td><td style = \"text-align: right;\">0.7</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">取出2个🔵</td><td style = \"text-align: right;\">0.155172</td><td style = \"text-align: right;\">0.844828</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">取出3个🔵</td><td style = \"text-align: right;\">0.072973</td><td style = \"text-align: right;\">0.927027</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">取出4个🔵</td><td style = \"text-align: right;\">0.032635</td><td style = \"text-align: right;\">0.967365</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">取出5个🔵</td><td style = \"text-align: right;\">0.0142522</td><td style = \"text-align: right;\">0.985748</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n绘图\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\n  fig=Figure(resolution=(1000,300))\n  for  idx in  1:5\n    local ax=Axis(fig[1,idx];title=\"$idx blueball\")\n    ax.xticks=(1:2,[\"bag1\",\"bag2\"])\n    local total=b1arr[idx]+b2arr[idx]\n    @info [b1arr[idx],b2arr[idx]]\n    stem!(ax,1:2,[b1arr[idx],b2arr[idx]]; trunkcolor = :blue, marker = :rect,stemcolor = :red, color = :orange)\n  end\n  fig\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n[ Info: [0.3, 0.7]\n[ Info: [0.15517241379310345, 0.8448275862068965]\n[ Info: [0.07297297297297299, 0.927027027027027]\n[ Info: [0.03263497179693796, 0.967365028203062]\n[ Info: [0.014252199413489739, 0.9857478005865103]\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=4}\n![](4-bags_files/figure-html/cell-4-output-2.png){}\n:::\n:::\n\n\n连续取出的蓝色球越多, 选出的包为:bag2 的概率越大, 因为初始条件中,bag2 中蓝色球\n占比大\n\n\n\n\n\n\n## 2. turing  workflow\n### 2.1  define turing model\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\ninclude(\"utils.jl\")\nusing Turing,Distributions\n@model function book_bags(num_blue_chips=2)\n    bag1 = 1 # 3 blue 7 red\n    bag2 = 2 #  7 blue 3 red\n\n    bag ~ Categorical([0.5,0.5])\n    \n    blue = 1\n    red = 2\n\n    n = 5\n    draw = tzeros(num_blue_chips)\n    for d in 1:num_blue_chips\n        if bag == bag1\n            draw[d] ~ Categorical([0.3,0.7])\n        else\n            draw[d] ~ Categorical([0.7,0.3])\n        end\n    end\n\n    # We've seen $test number of blue chips\n    for d in 1:num_blue_chips\n        true ~ Dirac(draw[d] == blue)\n    end\n\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\nbook_bags (generic function with 4 methods)\n```\n:::\n:::\n\n\n### 2.2  MCMC sampling\n\n::: {.cell execution_count=5}\n``` {.julia .cell-code}\n   num_chains = 4\n   for idx in 1:5\n    local model = book_bags(idx)\n    chs = sample(model, MH(), 10_000)\n    show_var_dist_pct(chs,:bag,[\"bag1\",\"bag2\"])\n   end \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\rSampling:  74%|██████████████████████████████▌          |  ETA: 0:00:00\rSampling: 100%|█████████████████████████████████████████| Time: 0:00:00\n\rSampling:  62%|█████████████████████████▋               |  ETA: 0:00:00\rSampling: 100%|█████████████████████████████████████████| Time: 0:00:00\n\rSampling:  43%|█████████████████▋                       |  ETA: 0:00:00\rSampling:  86%|███████████████████████████████████▌     |  ETA: 0:00:00\rSampling: 100%|█████████████████████████████████████████| Time: 0:00:00\n\rSampling:  41%|████████████████▊                        |  ETA: 0:00:00\rSampling:  76%|███████████████████████████████▍         |  ETA: 0:00:00\rSampling: 100%|█████████████████████████████████████████| Time: 0:00:00\n\rSampling:  28%|███████████▎                             |  ETA: 0:00:00\rSampling:  57%|███████████████████████▍                 |  ETA: 0:00:00\rSampling:  90%|████████████████████████████████████▊    |  ETA: 0:00:00\rSampling: 100%|█████████████████████████████████████████| Time: 0:00:00\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nDistributions of variable bag\nbag2       =>    7027  (0.702700)\nbag1       =>    2973  (0.297300)\nDistributions of variable bag\nbag2       =>    8494  (0.849400)\nbag1       =>    1506  (0.150600)\nDistributions of variable bag\nbag2       =>    9232  (0.923200)\nbag1       =>     768  (0.076800)\nDistributions of variable bag\nbag2       =>    9708  (0.970800)\nbag1       =>     292  (0.029200)\nDistributions of variable bag\nbag2       =>    9953  (0.995300)\nbag1       =>      47  (0.004700)\n```\n:::\n:::\n\n\n",
    "supporting": [
      "4-bags_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}